name: Test Suite

on: push

env:
  CACHE_NUMBER: 11  # increase to reset cache manually
  CONDA_ENV_FILE: './environment.yml'
  CONDA_ENV_NAME: 'my-env'

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9']
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/$CONDA_ENV_NAME

#           - os: macos-latest
#             label: osx-64
#             prefix: /Users/runner/miniconda3/envs/$CONDA_ENV_NAME

#           - os: windows-latest
#             label: win-64
#             prefix: C:\Miniconda3\envs\$CONDA_ENV_NAME

    name: ${{ matrix.label }}-py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

#      # Remove the python version pin from the env.yml which could be inconsistent
#      - name: Remove explicit python version from the environment
#        shell: bash -l {0}
#        run: |
#          sed -Ei '/^\s*-?\s*python\s*([#=].*)?$/d' ${{ env.CONDA_ENV_FILE }}
#          cat  ${{ env.CONDA_ENV_FILE }}

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: ${{ env.CONDA_ENV_NAME }}
            python-version: ${{ matrix.python-version }}
            use-mamba: true

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ matrix.python-version }}-${{ env.CACHE_NUMBER }}-${{ hashFiles(env.CONDA_ENV_FILE) }}-${{hashFiles('./setup.cfg') }}
        id: conda_cache

#      - uses: actions/cache@v2
#        with:
#          path: ~/.cache/pip
#          key: ${{ matrix.label }}-pip-${{ matrix.python-version }}-${{ env.CACHE_NUMBER }}-${{ hashFiles(env.CONDA_ENV_FILE) }}-${{hashFiles('./setup.cfg') }}

#       # Ensure the hack for the python version worked
#      - name: Ensure we have the right Python
#        shell: bash -l {0}
#        run: |
#          echo "Installed Python: $(python --version)"
#          echo "Expected: ${{ matrix.PYTHON_VERSION }}"
#          python --version | grep "Python ${{ matrix.python-version }}"

      - name: Update conda environment
        run: mamba env update -n ${{ env.CONDA_ENV_NAME }} -f ${{ env.CONDA_ENV_FILE }}
        if: steps.conda_cache.outputs.cache-hit != 'true'

#      # Update pip env whether or not there was a conda cache hit
#      - name: Update pip environment
#        shell: bash -l {0}
#        run: pip install -e ".[dev]"
#        if: steps.conda_cache.outputs.cache-hit == 'true'

#      - run: pip3 list
#        shell: bash -l {0}
#      - run: mamba info
#      - run: mamba list
#
#       # Ensure the hack for the python version worked
#      - name: Ensure we have the right Python
#        shell: bash -l {0}
#        run: |
#          echo "Installed Python: $(python --version)"
#          echo "Expected: ${{ matrix.PYTHON_VERSION }}"
#          python --version | grep "Python ${{ matrix.python-version }}"

#      - name: Run pre-commits
#        shell: bash -l {0}
#        run: |
#          pre-commit install
#          pre-commit run --all-files

      - name: Test with pytest
        shell: bash -l {0}
        run: |
          pytest
