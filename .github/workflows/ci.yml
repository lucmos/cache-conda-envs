name: ci

on:
  push:
    branches:
      - '*'

  pull_request:
    branches:
      - '*'

  schedule:
    - cron: '0 0 * * *'

env:
  CACHE_NUMBER: 13  # increase to reset cache manually
  CONDA_ENV_FILE: './environment.yml'
  CONDA_ENV_NAME: 'my-env'

jobs:
  build:

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/my-env

#          - os: macos-latest
#            label: osx-64
#            prefix: /Users/runner/miniconda3/envs/my-env
#
#          - os: windows-latest
#            label: win-64
#            prefix: C:\Miniconda3\envs\my-env

    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      # Remove the python version pin from the env.yml which could be inconsistent
      - name: Remove explicit python version from the environment
        shell: bash -l {0}
        run: |
          sed -i 's/python=.*/python=/' ${{ env.CONDA_ENV_FILE }}

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: my-env
            use-mamba: true

       # Ensure the hack for the python version worked
      - name: Ensure we have the right Python
        shell: bash -l {0}
        run: |
          echo "Installed Python: $(python --version)"
          echo "Expected: ${{ matrix.PYTHON_VERSION }}"
          python --version | grep "Python ${{ matrix.python-version }}"

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: mamba env update -n my-env -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'

       # Ensure the hack for the python version worked
      - name: Ensure we have the right Python
        shell: bash -l {0}
        run: |
          echo "Installed Python: $(python --version)"
          echo "Expected: ${{ matrix.PYTHON_VERSION }}"
          python --version | grep "Python ${{ matrix.python-version }}"

      - name: Run tests
        shell: bash -l {0}
        run: pytest -v
