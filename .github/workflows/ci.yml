name: Testing ci

on:
  push:
    branches:
      - '*'

  pull_request:
    branches:
      - '*'

  schedule:
    - cron: '0 0 * * *'

env:
  CACHE_NUMBER: 2  # increase to reset cache manually

jobs:
  build:

#    defaults:
#      run:
#        shell: bash -l {0}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/my-env

          #- os: macos-latest
            #label: osx-64
            #prefix: /Users/runner/miniconda3/envs/my-env

          #- os: windows-latest
            #label: win-64
            #prefix: C:\Miniconda3\envs\my-env

    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: my-env
            use-mamba: true

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ matrix.label }}-pip-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: mamba env update -n my-env -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Run tests
        shell: bash -l {0}
        run: pytest ./tests

      - run: pip3 list
        shell: bash -l {0}

      - run: python -c "import bug_setuptools_scm; print(bug_setuptools_scm.__version__)"
        shell: bash -l {0}

      - run: mamba info
      - run: mamba list
      - run: mamba config --show
