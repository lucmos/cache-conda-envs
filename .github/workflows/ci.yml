name: Testing ci

on: push

env:
  CACHE_NUMBER: 0  # increase to reset cache manually

jobs:
  build:

    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9']
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/my-env

#           - os: macos-latest
#             label: osx-64
#             prefix: /Users/runner/miniconda3/envs/my-env

#           - os: windows-latest
#             label: win-64
#             prefix: C:\Miniconda3\envs\my-env

    name: ${{ matrix.label }}-py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v2
      
      # Remove the python version pin from the env.yml which could be inconsistent
      - name: Remove explicit python version in environment.yml
        shell: bash -l {0}
        run: |
          sed -i 's/python=.*/python=/' environment.yml

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: my-env
            python-version: ${{ matrix.python-version }}
            use-mamba: true

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-${{ matrix.python-version }}-conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: conda_cache

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ matrix.label }}-${{ matrix.python-version }}-pip-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}

      - name: Update conda environment
        run: mamba env update -n my-env -f environment.yml
        if: steps.conda_cache.outputs.cache-hit != 'true'

      # Update pip env wheter or not there was a conda cache hit
      - name: Update pip environment
        shell: bash -l {0}
        run: pip install -e ".[dev]"
        if: steps.conda_cache.outputs.cache-hit == 'true'

      - run: pip3 list
        shell: bash -l {0}

      - run: mamba info
      - run: mamba list
      - run: mamba config --show
      
      
       # Ensure the hack for the python version worked
      - name: Ensure we have the right Python
        shell: bash -l {0}
        run: |
          echo "Installed Python: $(python --version)"
          echo "Expected: ${{ matrix.PYTHON_VERSION }}"
          python --version | grep "Python ${{ matrix.python-version }}"
          
          
#       - name: Run pre-commits
#         shell: bash -l {0}
#         run: |
#           pre-commit install
#           pre-commit run --all-files
          
      - name: Test with pytest
        shell: bash -l {0}
        run: |
          pytest
